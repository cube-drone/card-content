name: Command Line Interface
author: cube-drone
author_link: https://cube-drone.com
unlisted: true
description: |
  You should probably be using your computer's command line interface more.
image: assets/bee.jpg
favicon: assets/favicon.png
extra_header: |
  <style>

    @font-face {
      font-family: "DOS";
      src: url("assets/ModernDOS8x14.ttf") format("truetype");
    }

    .frames{
      font-family: "DOS", monospace;
    }

    .frame-primary, .markdown-card, .html-card{
      background-color: black;
      color: white;
    }

    .frame-primary a{
      color: white;
    }

    .frame-visible{
      background-color: black;
      color: white;
    }

    .paddington-bear{
      padding: 5px;
    }

    .paddington-ultra{
      padding: 50px;
    }

  </style>
pages:
  - title: You Should Use the Command Line Interface More
    id: intro
    stack:
      - id: intro-1
        class: bottom
        content: |
          Hey! You should probably be using your computer's command line interface more.
      - id: intro-2
        class:
          - bump-down-80
          - bump-left-10
        image: assets/cli.png
  - title: Hedging
    depth: -1
    class:
      - middle
      - center
    content: |
      That is - if you're a programmer, and you're not already using it _all the time_. <sup>1</sup>
    footnote: |
      <sup>1</sup>: If you're not a programmer, or if you _are_ a programmer and you _are_ using your computer's command line interface
        all the time, then you can safely ignore this presentation.

  - title: Command Line Interfaces Are Old
    depth: -1
    id: cli-dumb
    stack:
      - id: cli-dumb-1
        class:
          - bottom
        content: |
          I'm going to level with you: I am unbelievably **old**.

          My first computers could _only_ be interacted with via a command line interface.
      - id: cli-dumb-2
        image: assets/ibm.png
      - id: cli-dumb-2
        fade_in: 2000
        image: assets/ibm-2.png
  - title: Example CLI
    depth: -1
    class: paddington-bear
    animated_text: |
      <div>Microsoft MS-DOS Version 3.30
      (C)Copyright Microsoft Corp 1981-1987.

      C:\> <cursor> It would look something like this: You just waited for a "prompt" to come up, like "C:\>", and then you'd type in a command. Pressing enter would execute the command, and the computer would respond with text.</cursor></div>
  - title: Google and ChatGPT
    id: google
    depth: -1
    stack:
      - id: google-1
        class: bump-down-180
        content: |
          In some sense, the Google search window and the ChatGPT chat window are _also_ kinds of command line interface.

          You enter your command, and the computer responds with text.
      - id: google-2
        shake: 750
        image: assets/gooble.png
      - id: google-3
        image: assets/gooble-2.png
      - id: google-4
        fade_in: 1000
        image: assets/gooble-3.png
      - id: google-5
        fade_in: 4000
        image: assets/gooble-4.png
  - title: I Thought That This Was Dumb
    id: i-thought-that-this-was-dumb
    depth: -1
    stack:
      - id: i-thought-that-this-was-dumb-1
        class:
          - bump-down-20
          - paddington-ultra
        content: |
          When I finally got my hands on a computer with a graphical user interface, I figured that I was done
          with the dumb command line interface _forever_.

          But I was wrong!
      - id: i-thought-that-this-was-dumb-2
        image: assets/window.png
      - id: i-thought-that-this-was-dumb-3
        class:
          - center
          - bump-down-280
        delay: 8000
        animated_text: |
          <wave>In fact it was I who was the dumb one!</wave>
  - title: In Fact It Was I Who Was The Dumb One
    id: in-fact-it-was-i-who-was-the-dumb-one
    depth: -1
    stack:
      - id: in-fact-it-was-i-who-was-the-dumb-one-1
        class:
          - bottom
        content: |
          In fact, my dogged insistence on using graphical user interfaces, because _obviously_ they were more advanced,
           held me back as a software developer for the first few years of my CS education.
      - id: in-fact-it-was-i-who-was-the-dumb-one-2
        image: assets/held-back.png
        class:
          - bump-down-100
          - center
      - id: in-fact-it-was-i-who-was-the-dumb-one-2
        fade_in: 3000
        duration: 100
        image: assets/held-back-2.png
        class:
          - bump-down-100
          - center
      - id: in-fact-it-was-i-who-was-the-dumb-one-2
        fade_in: 3300
        duration: 100
        image: assets/held-back.png
        class:
          - bump-down-100
          - center
  - title: CLI vs GUI
    id: cli-vs-gui
    depth: -1
    stack:
      - id: cli-vs-gui
        content: |
          Sometimes, I will refer to them as "CLI" and "GUI" (pronounced "Gooey") -
          but you will know that I mean "Command Line Interface" and "Graphical User Interface".
      - id: cli-vs-gui-2
        image: assets/cli-gui.png
  - title: Why Should You Use the CLI?
    id: so
    class:
      - center
      - middle
    content: |
      ## So why should you use the CLI?

      obviously the way to start here is with a numbered list
  - title: 1. It Is The Easiest Programming Environment In the World
    depth: 2
    id: easy
    class:
      - center
      - middle
    content: |
      ## 1. It is the easiest programming environment in the world

  - title: The Easiest Programming Environment In The World 1
    depth: -1
    id: the-easiest-programming-environment-in-the-world
    content: |
      "But the command line interface is _hard to use_!" you might say.

      Yes! It is! It's _much_ harder to use than a graphical user interface.
  - title: The Easiest Programming Environment In The World 2
    depth: -1
    id: the-easiest-programming-environment-in-the-world-2
    content: |
      Why would you want to program for the CLI, then? If it's harder for the users?

      Because it's _easier_ for the _you, the developer_.
  - title: Hello World
    depth: -1
    id: hello-world
    stack:
      - id: hello-world-1
        content: |
          Command line interfaces are _dirt simple_. The very first programs, the tutorial
          "Hello, World!" programs that you write in
          any programming langauge are almost always intended to be run from the command line.
      - id: hello-world-2
        class:
          - bump-left-40
          - bump-down-200
        animated_text: |
          <color value="#00FFFF">fn main() {
            <tab /> println!("Hello, world!");
          }</color>

          $ cargo run
          Hello, world!
  - title: The Easiest Programming Environment In The World 3
    depth: -1
    id: the-easiest-programming-environment-in-the-world-3
    content: |
      Even very complicated command line programs take in a few arguments, do a few things, and then print out some text.

      Even a beginner programmer can write a program like that, and use it _immediately_, often
      on their first ever day of programming.
  - title: The Easiest Programming Environment In The World 4
    depth: -1
    id: the-easiest-programming-environment-in-the-world-4
    content: |
      In my SQL class, we had a "final project": create a program that takes input and executes five different kinds of SQL query.

      I had two questions about the project:
  - title: Can I Use Python?
    depth: -1
    id: can-i-use-python
    type: animated-text
    content: |
      Can I use Python?

      "Yes."
  - title: Does It Need A Graphical User Interface?
    id: does-it-need-a-graphical-user-interface
    type: animated-text
    content: |
      Does it need a graphical user interface?

      "No."
  - title: The Easiest Programming Environment In The World 5
    id: the-easiest-programming-environment-in-the-world-5
    content: |
      Some of my classmates spent _weeks_ on their projects, trying to get their graphical user interfaces to work,
        trying to get their Java programs to connect to the database with JDBC drivers and connect all of that
        to a complicated GUI.
  - title: The Easiest Programming Environment In The World 6
    id: the-easiest-programming-environment-in-the-world-6
    content: |
      I turned in five Python scripts that took in arguments from the command line, each which took a handful of parameters,
        executed the related SQL query, and printed out the results.

      Most of them were less than 100 lines of code.
  - title: The Easiest Programming Environment In The World 7
    id: the-easiest-programming-environment-in-the-world-7
    content: |
      It was exactly no more effort than the assignment called for.

      I got an A. It took about 90 minutes.
  - title: The Lazy Developer Ecosystem
    id: the-lazy-developer-ecosystem
    content: |
      Thanks to the relative ease of writing command line programs, there's a whole ecosystem of lazy developers
        who have written command line programs to do _everything_.
  - title: CLI-First, GUI-Second
    id: cli-first
    content: |
      Many useful programs are written as command line programs first, and then later get a graphical user interface,
        or never get a graphical user interface at all.
  - title: The Entire Build Toolchain
    id: tiny-fraction-of-the-power
    content: |
      First and foremost: the entire build or interpreter toolchain for every programming language ever. They're CLI programs first,
        and if you're _lucky_ your programming environment will have a button that says "Build" with a dizzying array of options
        that you can click on to harness a tiny fraction of the power of the CLI tools.
  - title: Git
    id: git
    content: |
      Oh, and let's not forget [git](https://git-scm.com/), the version control system that _figuratively_ every working programmer uses, every single day.

      There are lots of graphical user interfaces for git, but git itself is a command line program.
  - title: FFMpeg is Incredible
    id: ffmpeg
    content: |
      There's also [ffmpeg](https://www.ffmpeg.org/ffmpeg.html), a free program that
       can convert essentially any video format to any other video format,
       and any audio format to any other audio format.
  - title: Youtube-DL is Incredible
    id: youtube-dl
    content: |
      Another great example is [youtube-dl](https://github.com/ytdl-org/youtube-dl),
        a free program that can download videos from YouTube.

      You don't even need to go to a super-suspicious website covered in ads!

      _The power was inside your heart all along_.
  - title: Server-Side
    id: servers
    content: |
      Sometimes, you are interacting with a server, a distant computer that you've rented
        to dole out pictures of cats to strangers on the internet.
  - title: Headless
    id: headless
    content: |
      Most servers are _headless_: no monitor, no keyboard, no mouse, no graphical user interface.

      You log in remotely, and you interact with the server via the command line.

      If you're a server developer, knowing your way around the command line isn't just _useful_, it's _necessary_.
  - title: Fast
    id: fast
    content: |
      As cryptic as the command line interface can be, once you know what you're doing, it's _fast_.

      Much faster than clicking through a bunch of menus and windows.
  - title: Composable Programs
    id: composable-programs
    content: |
      Okay, here's a weird and cool thing about command line programs: they're _composable_.

      You can take the output of one command, and use it as the input to another command.

      That may not sound like much, but it's _incredibly_ powerful.
  - title: Composable Programs 2
    id: composable-programs-2
    content: |
      Like, for example, presuming you have access to a bash command line, and
        the [plain text UTF-8 version of the King James Bible from Project Gutenberg](https://www.gutenberg.org/cache/epub/10/pg10.txt)
       in a directory, you can use a command like

       `cat bible.txt | grep -i " ass "`

       to spit out every line that contains "ass".

      > 49:14 Issachar is a strong ass couching down between two burdens
  - title: Composable Programs 3
    id: composable-programs-3
    content: |
      That's the program `cat`, which reads a file and spits it out, working in tandem with `grep`, a program that can search in files.
